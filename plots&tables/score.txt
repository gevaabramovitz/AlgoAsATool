C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\Scripts\python.exe C:/Users/Owner/Desktop/CS/algoAsATool/predictor/Predictor_engine.py
KNN models
Random forest model
LDA model
AdaBoost
Trees models
MLPC model
Logistic model
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
SVM models
Bagging
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
[(KNeighborsClassifier(n_neighbors=3), {'PRECISION': 0.7342053517996068, 'TPR': 0.2446601941747573, 'TNR': 0.8723964042973033}), (RandomForestClassifier(max_depth=10, n_estimators=5), {'PRECISION': 0.760622381807301, 'TPR': 0.20815533980582523, 'TNR': 0.9165753124314843}), (LinearDiscriminantAnalysis(), {'PRECISION': 0.7814824313926648, 'TPR': 0.18796116504854368, 'TNR': 0.9490243367682526}), (AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                   n_estimators=40), {'PRECISION': 0.737539540053005, 'TPR': 0.27805825242718446, 'TNR': 0.867244025433019}), (DecisionTreeClassifier(max_depth=50), {'PRECISION': 0.6785500555698042, 'TPR': 0.3584466019417476, 'TNR': 0.7689103266827451}), (MLPClassifier(alpha=1e-07, hidden_layer_sizes=(6, 3), max_iter=600,
              random_state=1), {'PRECISION': 0.780883987347183, 'TPR': 0.20504854368932038, 'TNR': 0.9434334575750932}), (LogisticRegression(C=1, max_iter=1000, penalty='none', solver='saga'), {'PRECISION': 0.7815679233991621, 'TPR': 0.1650485436893204, 'TNR': 0.9556018417013813}), (SVC(decision_function_shape='ovo', gamma=3, kernel='poly', probability=True), {'PRECISION': 0.7605368898008036, 'TPR': 0.23611650485436894, 'TNR': 0.9085726814295111}), (BaggingClassifier(base_estimator=KNeighborsClassifier(n_neighbors=3),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7545524493459862, 'TPR': 0.1988349514563107, 'TNR': 0.9114229335672002}), (BaggingClassifier(base_estimator=RandomForestClassifier(max_depth=10,
                                                        n_estimators=5),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7825938274771309, 'TPR': 0.1429126213592233, 'TNR': 0.9631659723744793}), (BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), max_samples=0.7,
                  n_estimators=20), {'PRECISION': 0.781738907412157, 'TPR': 0.18174757281553397, 'TNR': 0.95110721333041}), (BaggingClassifier(base_estimator=AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                    n_estimators=40),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7754124989313499, 'TPR': 0.13009708737864079, 'TNR': 0.9575750931813198}), (BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=50),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7737026588014021, 'TPR': 0.1821359223300971, 'TNR': 0.9406928305196229}), (BaggingClassifier(base_estimator=MLPClassifier(alpha=1e-07,
                                               hidden_layer_sizes=(6, 3),
                                               max_iter=600, random_state=1),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7816534154056596, 'TPR': 0.16427184466019418, 'TNR': 0.9559307169480377}), (BaggingClassifier(base_estimator=LogisticRegression(C=1, max_iter=1000,
                                                    penalty='none',
                                                    solver='saga'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7815679233991621, 'TPR': 0.17436893203883494, 'TNR': 0.9529708397281298}), (BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo', gamma=3,
                                     kernel='poly', probability=True),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7812259553731726, 'TPR': 0.012038834951456311, 'TNR': 0.9983556237667178}), (VotingClassifier(estimators=[('0', KNeighborsClassifier(n_neighbors=3)),
                             ('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=5)),
                             ('2', LinearDiscriminantAnalysis()),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=40)),
                             ('4', DecisionTreeClassifier(max_depth=50)),
                             ('5',
                              MLPClassifier(alpha=1e-07,
                                            hidden_layer_sizes=...
                                                                             max_iter=600,
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  max_iter=1000,
                                                                                  penalty='none',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=3,
                                                                   kernel='poly',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))]), {'PRECISION': 0.7839616995810892, 'TPR': 0.14135922330097087, 'TNR': 0.9653584740188556}), (VotingClassifier(estimators=[('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=5)),
                             ('2', LinearDiscriminantAnalysis()),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=40)),
                             ('4', DecisionTreeClassifier(max_depth=50)),
                             ('5',
                              MLPClassifier(alpha=1e-07,
                                            hidden_layer_sizes=(6, 3),
                                            max_iter=600, random_state=1)),
                             ('6',
                              L...
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  max_iter=1000,
                                                                                  penalty='none',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=3,
                                                                   kernel='poly',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))],
                 voting='soft'), {'PRECISION': 0.7833632555356074, 'TPR': 0.12077669902912622, 'TNR': 0.9704012278009209})]
(DecisionTreeClassifier(max_depth=50), {'PRECISION': 0.6785500555698042, 'TPR': 0.3584466019417476, 'TNR': 0.7689103266827451})
KNN models
Random forest model
LDA model
AdaBoost
Trees models
MLPC model
Logistic model
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
SVM models
Bagging
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
[(KNeighborsClassifier(n_neighbors=3), {'PRECISION': 0.7342053517996068, 'TPR': 0.2446601941747573, 'TNR': 0.8723964042973033}), (RandomForestClassifier(max_depth=10, n_estimators=5), {'PRECISION': 0.763871078054202, 'TPR': 0.21631067961165049, 'TNR': 0.9184389388292041}), (LinearDiscriminantAnalysis(), {'PRECISION': 0.7814824313926648, 'TPR': 0.18796116504854368, 'TNR': 0.9490243367682526}), (AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                   n_estimators=40), {'PRECISION': 0.7378815080789947, 'TPR': 0.2796116504854369, 'TNR': 0.867244025433019}), (DecisionTreeClassifier(max_depth=54), {'PRECISION': 0.6787210395827991, 'TPR': 0.3530097087378641, 'TNR': 0.770664327998246}), (MLPClassifier(alpha=1e-07, hidden_layer_sizes=(6, 3), max_iter=600,
              random_state=1), {'PRECISION': 0.780883987347183, 'TPR': 0.20504854368932038, 'TNR': 0.9434334575750932}), (LogisticRegression(C=1, max_iter=1000, penalty='none', solver='saga'), {'PRECISION': 0.7815679233991621, 'TPR': 0.1650485436893204, 'TNR': 0.9556018417013813}), (SVC(decision_function_shape='ovo', gamma=3, kernel='poly', probability=True), {'PRECISION': 0.7605368898008036, 'TPR': 0.23611650485436894, 'TNR': 0.9085726814295111}), (BaggingClassifier(base_estimator=KNeighborsClassifier(n_neighbors=3),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7529281012225357, 'TPR': 0.2062135922330097, 'TNR': 0.9072571804428853}), (BaggingClassifier(base_estimator=RandomForestClassifier(max_depth=10,
                                                        n_estimators=5),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.78327776352911, 'TPR': 0.1366990291262136, 'TNR': 0.9657969743477307}), (BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), max_samples=0.7,
                  n_estimators=20), {'PRECISION': 0.7816534154056596, 'TPR': 0.18019417475728156, 'TNR': 0.9514360885770664}), (BaggingClassifier(base_estimator=AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                    n_estimators=40),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7768658630418056, 'TPR': 0.12310679611650485, 'TNR': 0.9614119710589782}), (BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=54),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7680601863725741, 'TPR': 0.16349514563106796, 'TNR': 0.9387195790396843}), (BaggingClassifier(base_estimator=MLPClassifier(alpha=1e-07,
                                               hidden_layer_sizes=(6, 3),
                                               max_iter=600, random_state=1),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.781738907412157, 'TPR': 0.14640776699029126, 'TNR': 0.9610830958123219}), (BaggingClassifier(base_estimator=LogisticRegression(C=1, max_iter=1000,
                                                    penalty='none',
                                                    solver='saga'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7814824313926648, 'TPR': 0.1712621359223301, 'TNR': 0.9537382153036614}), (BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo', gamma=3,
                                     kernel='poly', probability=True),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.7805420193211935, 'TPR': 0.005436893203883495, 'TNR': 0.9993422495066872}), (VotingClassifier(estimators=[('0', KNeighborsClassifier(n_neighbors=3)),
                             ('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=5)),
                             ('2', LinearDiscriminantAnalysis()),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=40)),
                             ('4', DecisionTreeClassifier(max_depth=54)),
                             ('5',
                              MLPClassifier(alpha=1e-07,
                                            hidden_layer_sizes=...
                                                                             max_iter=600,
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  max_iter=1000,
                                                                                  penalty='none',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=3,
                                                                   kernel='poly',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))]), {'PRECISION': 0.7833632555356074, 'TPR': 0.14563106796116504, 'TNR': 0.9633852225389169}), (VotingClassifier(estimators=[('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=5)),
                             ('2', LinearDiscriminantAnalysis()),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=40)),
                             ('4', DecisionTreeClassifier(max_depth=54)),
                             ('5',
                              MLPClassifier(alpha=1e-07,
                                            hidden_layer_sizes=(6, 3),
                                            max_iter=600, random_state=1)),
                             ('6',
                              L...
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  max_iter=1000,
                                                                                  penalty='none',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=3,
                                                                   kernel='poly',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))],
                 voting='soft'), {'PRECISION': 0.7831067795161153, 'TPR': 0.12427184466019417, 'TNR': 0.9690857268142951})]
(VotingClassifier(estimators=[('0', KNeighborsClassifier(n_neighbors=3)),
                             ('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=5)),
                             ('2', LinearDiscriminantAnalysis()),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=40)),
                             ('4', DecisionTreeClassifier(max_depth=54)),
                             ('5',
                              MLPClassifier(alpha=1e-07,
                                            hidden_layer_sizes=...
                                                                             max_iter=600,
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  max_iter=1000,
                                                                                  penalty='none',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=3,
                                                                   kernel='poly',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))]), {'PRECISION': 0.7833632555356074, 'TPR': 0.14563106796116504, 'TNR': 0.9633852225389169})
KNN models
Random forest model
LDA model
AdaBoost
Trees models
MLPC model
Logistic model
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
SVM models
Bagging
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
[(KNeighborsClassifier(n_neighbors=29), {'PRECISION': 0.6770966914593486, 'TPR': 0.7127676965832924, 'TNR': 0.6379928315412187}), (RandomForestClassifier(max_depth=9, n_estimators=70), {'PRECISION': 0.6906044284859366, 'TPR': 0.7003433055419324, 'TNR': 0.6799283154121863}), (LinearDiscriminantAnalysis(solver='lsqr'), {'PRECISION': 0.6855604001025905, 'TPR': 0.7310773254863495, 'TNR': 0.635663082437276}), (AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                   n_estimators=30), {'PRECISION': 0.6507651534581517, 'TPR': 0.6648683995422593, 'TNR': 0.6353046594982079}), (DecisionTreeClassifier(max_depth=2), {'PRECISION': 0.6603402581858596, 'TPR': 0.72699035474906, 'TNR': 0.5872759856630825}), (MLPClassifier(alpha=1e-05, hidden_layer_sizes=(8, 2), max_iter=600,
              random_state=1), {'PRECISION': 0.6871847482260409, 'TPR': 0.7256825241131274, 'TNR': 0.6449820788530466}), (LogisticRegression(C=1, l1_ratio=0.5, max_iter=1000, penalty='elasticnet',
                   solver='saga'), {'PRECISION': 0.6929982046678635, 'TPR': 0.6929867582148111, 'TNR': 0.693010752688172}), (SVC(decision_function_shape='ovo', gamma=1, kernel='linear', probability=True), {'PRECISION': 0.6921432846028897, 'TPR': 0.6846493379107406, 'TNR': 0.7003584229390681}), (BaggingClassifier(base_estimator=KNeighborsClassifier(n_neighbors=29),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6797469436607677, 'TPR': 0.7108059506293934, 'TNR': 0.6456989247311828}), (BaggingClassifier(base_estimator=RandomForestClassifier(max_depth=9,
                                                        n_estimators=70),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6855604001025905, 'TPR': 0.689553702795488, 'TNR': 0.6811827956989247}), (BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(solver='lsqr'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6868427802000513, 'TPR': 0.7235572993297368, 'TNR': 0.646594982078853}), (BaggingClassifier(base_estimator=AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                    n_estimators=30),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6726511071214841, 'TPR': 0.6779467059015858, 'TNR': 0.6668458781362007}), (BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=2),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6734205351799607, 'TPR': 0.609612555174105, 'TNR': 0.7433691756272401}), (BaggingClassifier(base_estimator=MLPClassifier(alpha=1e-05,
                                               hidden_layer_sizes=(8, 2),
                                               max_iter=600, random_state=1),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6920577925963922, 'TPR': 0.6987085172470165, 'TNR': 0.6847670250896057}), (BaggingClassifier(base_estimator=LogisticRegression(C=1, l1_ratio=0.5,
                                                    max_iter=1000,
                                                    penalty='elasticnet',
                                                    solver='saga'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6938531247328374, 'TPR': 0.68873630864803, 'TNR': 0.6994623655913978}), (BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo', gamma=1,
                                     kernel='linear', probability=True),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6899204924339575, 'TPR': 0.7060650645741376, 'TNR': 0.6722222222222223}), (VotingClassifier(estimators=[('0', KNeighborsClassifier(n_neighbors=29)),
                             ('1',
                              RandomForestClassifier(max_depth=9,
                                                     n_estimators=70)),
                             ('2', LinearDiscriminantAnalysis(solver='lsqr')),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=30)),
                             ('4', DecisionTreeClassifier(max_depth=2)),
                             ('5',
                              MLPClassifier(alpha=1e-05,
                                            hidden...
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  l1_ratio=0.5,
                                                                                  max_iter=1000,
                                                                                  penalty='elasticnet',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=1,
                                                                   kernel='linear',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))]), {'PRECISION': 0.6916303325639053, 'TPR': 0.6949485041687101, 'TNR': 0.6879928315412186}), (VotingClassifier(estimators=[('1',
                              RandomForestClassifier(max_depth=9,
                                                     n_estimators=70)),
                             ('2', LinearDiscriminantAnalysis(solver='lsqr')),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=30)),
                             ('4', DecisionTreeClassifier(max_depth=2)),
                             ('5',
                              MLPClassifier(alpha=1e-05,
                                            hidden_layer_sizes=(8, 2),
                                            max_iter=600, random_stat...
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  l1_ratio=0.5,
                                                                                  max_iter=1000,
                                                                                  penalty='elasticnet',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=1,
                                                                   kernel='linear',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))],
                 voting='soft'), {'PRECISION': 0.6909463965119261, 'TPR': 0.6977276442700671, 'TNR': 0.6835125448028674})]
(LinearDiscriminantAnalysis(solver='lsqr'), {'PRECISION': 0.6855604001025905, 'TPR': 0.7310773254863495, 'TNR': 0.635663082437276})
KNN models
Random forest model
LDA model
AdaBoost
Trees models
MLPC model
Logistic model
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\linear_model\_logistic.py:1484: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters
  "Setting penalty='none' will ignore the C and l1_ratio parameters"
SVM models
Bagging
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
C:\Users\Owner\Desktop\CS\Intro\ex12\interpeter\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.
  ConvergenceWarning,
[(KNeighborsClassifier(n_neighbors=29), {'PRECISION': 0.6770966914593486, 'TPR': 0.7127676965832924, 'TNR': 0.6379928315412187}), (RandomForestClassifier(max_depth=10, n_estimators=25), {'PRECISION': 0.6820552278361973, 'TPR': 0.6942945888507438, 'TNR': 0.6686379928315412}), (LinearDiscriminantAnalysis(solver='lsqr'), {'PRECISION': 0.6855604001025905, 'TPR': 0.7310773254863495, 'TNR': 0.635663082437276}), (AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                   n_estimators=30), {'PRECISION': 0.6510216294776439, 'TPR': 0.6655223148602256, 'TNR': 0.6351254480286739}), (DecisionTreeClassifier(max_depth=2), {'PRECISION': 0.6603402581858596, 'TPR': 0.72699035474906, 'TNR': 0.5872759856630825}), (MLPClassifier(alpha=1e-05, hidden_layer_sizes=(8, 2), max_iter=600,
              random_state=1), {'PRECISION': 0.6871847482260409, 'TPR': 0.7256825241131274, 'TNR': 0.6449820788530466}), (LogisticRegression(C=1, l1_ratio=0.5, max_iter=1000, penalty='elasticnet',
                   solver='saga'), {'PRECISION': 0.6929982046678635, 'TPR': 0.6929867582148111, 'TNR': 0.693010752688172}), (SVC(decision_function_shape='ovo', gamma=1, kernel='linear', probability=True), {'PRECISION': 0.6921432846028897, 'TPR': 0.6846493379107406, 'TNR': 0.7003584229390681}), (BaggingClassifier(base_estimator=KNeighborsClassifier(n_neighbors=29),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6755578353423954, 'TPR': 0.7145659637076999, 'TNR': 0.6327956989247312}), (BaggingClassifier(base_estimator=RandomForestClassifier(max_depth=10,
                                                        n_estimators=25),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6833376079336582, 'TPR': 0.6830145496158248, 'TNR': 0.6836917562724014}), (BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(solver='lsqr'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6928272206548688, 'TPR': 0.6871015203531142, 'TNR': 0.6991039426523298}), (BaggingClassifier(base_estimator=AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                    n_estimators=30),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6720526630760024, 'TPR': 0.6812162824914174, 'TNR': 0.6620071684587814}), (BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=2),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6723946311019919, 'TPR': 0.6202386790910577, 'TNR': 0.7295698924731183}), (BaggingClassifier(base_estimator=MLPClassifier(alpha=1e-05,
                                               hidden_layer_sizes=(8, 2),
                                               max_iter=600, random_state=1),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6906899204924339, 'TPR': 0.7005067843714239, 'TNR': 0.6799283154121863}), (BaggingClassifier(base_estimator=LogisticRegression(C=1, l1_ratio=0.5,
                                                    max_iter=1000,
                                                    penalty='elasticnet',
                                                    solver='saga'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6941096007523296, 'TPR': 0.6941311100212523, 'TNR': 0.6940860215053763}), (BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo', gamma=1,
                                     kernel='linear', probability=True),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6901769684534496, 'TPR': 0.7032859244727808, 'TNR': 0.6758064516129032}), (VotingClassifier(estimators=[('0', KNeighborsClassifier(n_neighbors=29)),
                             ('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=25)),
                             ('2', LinearDiscriminantAnalysis(solver='lsqr')),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=30)),
                             ('4', DecisionTreeClassifier(max_depth=2)),
                             ('5',
                              MLPClassifier(alpha=1e-05,
                                            hidde...
                                                                             random_state=1),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  l1_ratio=0.5,
                                                                                  max_iter=1000,
                                                                                  penalty='elasticnet',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=1,
                                                                   kernel='linear',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))]), {'PRECISION': 0.6913738565444131, 'TPR': 0.6938041523622691, 'TNR': 0.6887096774193548}), (VotingClassifier(estimators=[('1',
                              RandomForestClassifier(max_depth=10,
                                                     n_estimators=25)),
                             ('2', LinearDiscriminantAnalysis(solver='lsqr')),
                             ('3',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=3),
                                                 n_estimators=30)),
                             ('4', DecisionTreeClassifier(max_depth=2)),
                             ('5',
                              MLPClassifier(alpha=1e-05,
                                            hidden_layer_sizes=(8, 2),
                                            max_iter=600, random_sta...
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('14',
                              BaggingClassifier(base_estimator=LogisticRegression(C=1,
                                                                                  l1_ratio=0.5,
                                                                                  max_iter=1000,
                                                                                  penalty='elasticnet',
                                                                                  solver='saga'),
                                                max_samples=0.7,
                                                n_estimators=20)),
                             ('15',
                              BaggingClassifier(base_estimator=SVC(decision_function_shape='ovo',
                                                                   gamma=1,
                                                                   kernel='linear',
                                                                   probability=True),
                                                max_samples=0.7,
                                                n_estimators=20))],
                 voting='soft'), {'PRECISION': 0.6918013165769, 'TPR': 0.6969102501226091, 'TNR': 0.6862007168458781})]
(BaggingClassifier(base_estimator=LogisticRegression(C=1, l1_ratio=0.5,
                                                    max_iter=1000,
                                                    penalty='elasticnet',
                                                    solver='saga'),
                  max_samples=0.7, n_estimators=20), {'PRECISION': 0.6941096007523296, 'TPR': 0.6941311100212523, 'TNR': 0.6940860215053763})

Process finished with exit code 0
